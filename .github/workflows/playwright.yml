name: Playwright Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-node@v4
      with:
        node-version: lts/*

    - name: Install dependencies
      run: npm install -g pnpm && pnpm install

    - name: Install Playwright Browsers
      run: pnpm exec playwright install --with-deps

    - name: Create .env file
      run: |
        echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
        echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
        echo "NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}" >> .env
        echo "NEXT_PUBLIC_TG_BOT_NAME=${{ secrets.NEXT_PUBLIC_TG_BOT_NAME }}" >> .env
        echo "TG_BOT_TOKEN=${{ secrets.TG_BOT_TOKEN }}" >> .env
        echo "FORUM_ROOT_NAME=${{ secrets.FORUM_ROOT_NAME }}" >> .env

    - name: Create .hytkybot.env file
      run: |
        echo "TG_BOT_TOKEN=${{ secrets.TG_BOT_TOKEN }}" >> .hytkybot.env
        echo "TG_ACTIVE_GROUP_IDS=${{ secrets.TG_ACTIVE_GROUP_IDS }}" >> .hytkybot.env
        echo "TG_ADMIN_GROUP_IDS=${{ secrets.TG_ADMIN_GROUP_IDS }}" >> .hytkybot.env
        echo "PORT=3000" >> .hytkybot.env

    - name: Run Playwright tests
      run: pnpm exec playwright test

    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30
