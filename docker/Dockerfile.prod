##### DEPENDENCIES

FROM --platform=linux/amd64 node:16-alpine3.16 as deps
RUN apk add --no-cache libc6-compat openssl1.1-compat --repository=https://dl-cdn.alpinelinux.org/alpine/edge/community
WORKDIR /app

# Install Prisma Client

COPY ./prisma ./

# Install dependencies based on the preferred package manager

COPY package.json pnpm-lock.yaml ./

RUN \
 if [ -f pnpm-lock.yaml ]; \
 then \
  yarn global add pnpm && pnpm add prisma && pnpm i; \
 else \
  echo "Lockfile not found." && exit 1; \
 fi

##### BUILDER

FROM --platform=linux/amd64 node:16-alpine3.16 AS builder
RUN apk add --no-cache libc6-compat openssl1.1-compat --repository=https://dl-cdn.alpinelinux.org/alpine/edge/community
RUN yarn global add pnpm
ARG DATABASE_URL
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .

RUN pnpx prisma generate
ENV NEXT_TELEMETRY_DISABLED 1

RUN \
 if [ -f pnpm-lock.yaml ]; \
 then \
   SKIP_ENV_VALIDATION=1 pnpm run build; \ 
 else \
  echo "Lockfile not found." && exit 1; \
 fi

##### RUNNER

FROM --platform=linux/amd64 node:16-alpine3.16 AS runner
RUN apk add --no-cache libc6-compat openssl1.1-compat --repository=https://dl-cdn.alpinelinux.org/alpine/edge/community
RUN yarn global add pnpm
WORKDIR /app

ENV NODE_ENV production

ENV NEXT_TELEMETRY_DISABLED 1

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

COPY --from=builder /app/next.config.mjs ./
COPY --from=builder /app/public ./public
COPY --from=builder --chown=nextjs:nodejs /app/package.json ./package.json

COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static
COPY --from=builder --chown=nextjs:nodejs /app/prisma ./prisma
COPY --from=builder --chown=nextjs:nodejs /app/start.prod.sh ./
RUN chmod +x ./start.prod.sh
#RUN chown -R nextjs:nodejs app/node_modules/.prisma

USER nextjs
EXPOSE 3000
ENV PORT 3000

CMD ["./start.prod.sh"]