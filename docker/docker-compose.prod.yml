services:
  nginx:
    image: nginx:mainline-alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - '80:80'
    volumes:
      - ./nginx-conf:/etc/nginx/conf.d
    depends_on:
      - hytky

  hytky:
    platform: 'linux/amd64'
    container_name: hytky
    build:
      context: ../
      dockerfile: docker/Dockerfile.prod
      args:
        DATABASE_URL: 'postgresql://postgres:postgres@postgres:5432/postgres'
    env_file:
      - ../.env
    working_dir: /app
    depends_on:
      postgres:
        condition: service_healthy
      dbsync:
        condition: service_completed_successfully
    restart: always

  postgres:
    image: 'postgres:16-alpine'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    env_file:
      - ../.env
    volumes:
      - ./hytky-postgres-data:/var/lib/postgresql/data:rw
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -d postgres -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  dbsync:
    platform: 'linux/amd64'
    build:
      context: ../
      dockerfile: docker/Dockerfile.dbsync
    env_file:
      - ../.env
    depends_on:
      - postgres
    restart: no

  hytkybot:
    platform: 'linux/amd64'
    image: 'ghcr.io/zeeket/hytkybot/hytkybot:latest'
    env_file:
      - ../.hytkybot.env
    restart: always
