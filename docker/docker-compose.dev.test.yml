services:
  playwright:
    platform: 'linux/amd64'
    build:
      context: ../
      dockerfile: docker/Dockerfile.test
    env_file:
      - ../.env
    volumes:
        - ../playwright-report:/app/playwright-report
    depends_on:
      dev:
        condition: service_healthy
    ports:
      - 9323:9323
    restart: on-failure
    command: 'pnpm exec playwright test'
    networks:
    - shared_network

  dev:
    platform: 'linux/amd64'
    build:
      context: ../
      dockerfile: docker/Dockerfile.dev
    ports:
      - '80:80'
    healthcheck:
      test: ['CMD-SHELL', 'curl -f http://localhost:80/ || (echo "Health check failed" && exit 1)']
      interval: 10s
      timeout: 5s
      retries: 5
    env_file:
      - ../.env
    volumes:
      - ../:/app
      - /app/node_modules/
    depends_on:
      postgres:
        condition: service_healthy
    restart: always
    networks:
    - shared_network
  postgres:
    image: 'postgres:alpine'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    env_file:
      - ../.env
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -d postgres -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
    networks:
    - shared_network
  hytkybot:
    platform: 'linux/amd64'
    image: 'ghcr.io/zeeket/hytkybot/hytkybot:latest'
    env_file:
      - ../.hytkybot.env
    restart: always
    networks:
    - shared_network

networks:
  shared_network:
    driver: bridge