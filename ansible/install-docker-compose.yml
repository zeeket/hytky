---
- name: Install Docker Compose
  hosts: all
  become: true
  vars:
    docker_apt_gpg_key: "{{ lookup('env', 'DOCKER_APT_GPG_KEY') }}"
    docker_apt_repository: "{{ lookup('env', 'DOCKER_APT_REPOSITORY') }}"
    docker_compose_version: "{{ lookup('env', 'DOCKER_COMPOSE_VERSION') }}"
  tasks:
    - name: Install packages using apt
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg2
          - software-properties-common
        state: present
        update_cache: no

    - name: Add Docker GPG apt Key
      apt_key:
        url: "{{ docker_apt_gpg_key }}"
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: "{{ docker_apt_repository }}"
        state: present
        update_cache: true

    - name: Update apt and install docker-ce
      apt:
        update_cache: no
        name: docker-ce
        state: present

    - name: Check current docker-compose version
      command: docker-compose --version
      register: docker_compose_vsn
      changed_when: false
      failed_when: false
      check_mode: no

    - set_fact:
        docker_compose_current_version: "{{ docker_compose_vsn.stdout | regex_search('(\\d+(\\.\\d+)+)') }}"
      when:
        - docker_compose_vsn.stdout is defined

    - name: Determine if docker-compose upgrade is needed
      shell: >
        dpkg --compare-versions "{{ docker_compose_current_version }}" lt "{{ docker_compose_version }}"
      register: docker_compose_upgrade_required
      changed_when: false
      failed_when: false

    - name: Install or upgrade docker-compose
      get_url:
        url: "https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-Linux-x86_64"
        checksum: "sha256:https://github.com/docker/compose/releases/download/v{{ docker_compose_version }}/docker-compose-linux-x86_64.sha256"
        dest: /usr/local/bin/docker-compose
        mode: 'a+x'
        force: yes
      when: docker_compose_upgrade_required.stdout == "0"

    - name: Run and enable docker
      service:
        name: docker
        state: started
        enabled: true